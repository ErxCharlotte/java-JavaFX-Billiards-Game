# ðŸŽ± JavaFX Billiards Game â€“ OOP Extension Project

This project builds on a provided JavaFX-based billiards game and applies advanced **Object-Oriented Programming (OOP)** principles and **design patterns** to implement new features.

---

## ðŸ”§ Features Added

- ðŸ”˜ Difficulty levels (`Easy`, `Normal`, `Hard`) using the **State Pattern**
- ðŸ•’ In-game timer with tick count
- ðŸ§  Undo functionality using the **Memento Pattern**
- ðŸŽ¯ Modified ball pocketing: balls only disappear after 3 drops (**Strategy Pattern**)
- ðŸ’¡ Cheating feature: remove balls via click
- ðŸ§® Extended scoring system with ball-specific strategies

---

## ðŸ§± Design Patterns Used

- **Builder Pattern**: To create various ball types
- **Factory Method Pattern**: To generate configuration objects
- **Strategy Pattern**: For scoring logic & ball pocketing behavior
- **State Pattern**: For managing difficulty settings
- **Memento Pattern**: To allow undo functionality (game state snapshot)

---

## ðŸ§  OOP & GRASP Principles

The project demonstrates:

- âœ… **Low coupling** / **High cohesion**
- âœ… **Open/Closed Principle** (OCP)
- âœ… **Single Responsibility Principle** (SRP)
- âœ… Use of **Information Expert**
- âœ… Scalable class structure for future expansion

---
